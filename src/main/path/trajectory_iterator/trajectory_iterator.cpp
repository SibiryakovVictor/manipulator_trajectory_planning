/**************************************************************************************************
Описание

Класс, позволяющий последовательно получить точки отрезка конфигурационного пространства с заданным
шагом

Разработчик: Сибиряков Виктор
Заметки
**************************************************************************************************/


#include "trajectory_iterator.h"

using namespace motion_planner;
using namespace motion_planner::path;



/**************************************************************************************************
Описание:
конфигурирует объект класса для выдачи точек нового отрезка
Аргументы:
Возврат:
**************************************************************************************************/
void TrajectoryIterator::setTrajectory( const config_space::Point & startPoint, 
										const config_space::Point & endPoint,
										float step )
{
	m_segment.changeStartEnd( startPoint, endPoint );

	m_paramStep = m_segment.calcParamStep( step );

	m_curParamValue = 0.f;
}



/**************************************************************************************************
Описание:
изменяет шаг выдачи точек отрезка, после чего точки отрезка методом getNextPoint выдаются сначала
Аргументы:
Возврат:
**************************************************************************************************/
void TrajectoryIterator::changePrec( float prec_Rad )
{
	m_paramStep =  m_segment.calcParamStep( prec_Rad );

	m_curParamValue = 0.f;
}



/**************************************************************************************************
Описание:
возвращает следующую точку отрезка (от начала и до конца отрезка)
Аргументы:
Возврат: точка отрезка
**************************************************************************************************/
config_space::Point TrajectoryIterator::getNextPoint()
{
	if ( isPassed() )
	{
		return end();
	}

	auto paramValue = m_curParamValue;

	m_curParamValue += m_paramStep;

	return m_segment.getPoint( paramValue );
}



/**************************************************************************************************
Описание:
возвращает начало отрезка
Аргументы:
Возврат: начальная точка отрезка
**************************************************************************************************/
config_space::Point TrajectoryIterator::start() const
{
	return m_segment.getPoint( 0.f );
}



/**************************************************************************************************
Описание:
возвращает конец отрезка
Аргументы:
Возврат: конечная точка отрезка
**************************************************************************************************/
config_space::Point TrajectoryIterator::end() const
{
	return m_segment.getPoint( 1.f );
}



/**************************************************************************************************
Описание:
определяет, была ли выдана конечная точка отрезка методом getNextPoint
Аргументы:
Возврат: результат проверки
**************************************************************************************************/
bool TrajectoryIterator::isPassed() const
{
	return ( m_curParamValue >= 1.f );
}



/**************************************************************************************************
Описание:
сбрасывает шаг выдачи точек отрезка, то есть после вызова этого метода метод getNextPoint
будет выдавать точки траектории, начиная от начала отрезка
Аргументы:
Возврат:
**************************************************************************************************/
void TrajectoryIterator::resetStep()
{
	m_curParamValue = 0.f;
}
